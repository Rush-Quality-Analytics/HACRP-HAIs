import pandas as pdimport warningsfrom IPython.utils import ioimport sysimport numpy as npwarnings.filterwarnings('ignore')pd.set_option('display.max_columns', None)pd.set_option('display.max_rows', None)main_dir = '/Users/kenlocey/GitHub/HACRP-HAIs/data/CareCompare_data/'###################################################################################################### CUSTOM FUNCTIONS #####################################################################################################################def check_lists(lists):    for i, ls in enumerate(lists):        for i2, ls2 in enumerate(lists):            for i3 in ls:                if i3 not in ls2:                    print('\n')                    print(i3 + ': NOT FOUND IN')                    print(ls2)                    sys.exit()                                                def curate(df):    try:        df = df[df['Facility ID'] != np.nan]        df['Facility ID'] = df['Facility ID'].values.astype(str)                ids = df['Facility ID'].tolist()        ids2 = []        for i in ids:            if len(i) < 6:                i = '0' + i            ids2.append(i)        df['Facility ID'] = ids2            except:        pass    try:        df = df[df['Facility Name'] != np.nan]    except:        pass        for c in list(df):            try:            df[c] = df[c].str.replace("\t","")        except:            pass    return dfdef rename_and_fill(df):        cols1 = ['Provider ID', "Measure Start Date", "Measure End Date",             'Hospital Name', 'Address 1',              ]            cols2 = ['Facility ID', "Start Date", "End Date",             'Facility Name', 'Address',             ]        for i, col in enumerate(cols1):        if col in list(df):            df.rename(columns={col: cols2[i]}, inplace=True)                            cols = [            ]        for col in cols:        if col not in list(df):            df[col] = float('NaN')        l = list(df)    l = list(set([x for x in l if l.count(x) > 1]))    if len(l) > 0:        print('duplicates:', l)        sys.exit()            return dfdef process2(df, lists, yr, mo):    df = rename_and_fill(df)    df = curate(df)    lists.append(list(df))    df['file_month'] = [mo]* df.shape[0]    df['file_year'] = [yr]* df.shape[0]    df = df.reindex(sorted(df.columns), axis=1)    return df, lists##################################################################################################################  COMPLICATIONS & DEATHS FILES  #########################################################################################################################df_list = []lists = []yrs = ['2022', '2022',        '2021','2021','2021', '2021', '2021',       '2020', '2020', '2020', '2020',        '2019', '2019', '2019', '2019',        '2018', '2018', '2018', '2018',       '2017', '2017', '2017',       '2016', '2016', '2016', '2016',       '2015', '2015', '2015', '2015', '2015', '2015',       '2014', '2014', '2014',       '2013', '2013', '2013',       ]mos = ['01', '04',        '01', '03', '04', '07', '10',        '10', '07', '04', '01',        '10', '07', '04', '03',        '10', '07', '05', '01',       '10', '07', '04',       '12', '11', '08', '05',       '12', '10', '07', '05', '04', '01',       '12', '10', '07',       '10', '07', '04',       ]subdirs = ['2022/hospitals_01_2022/Healthcare_Associated_Infections-Hospital.csv',            '2022/hospitals_04_2022/Healthcare_Associated_Infections-Hospital.csv',                      '2021/hospitals_01_2021/Healthcare_Associated_Infections-Hospital.csv',           '2021/hospitals_03_2021/Healthcare_Associated_Infections-Hospital.csv',           '2021/hospitals_04_2021/Healthcare_Associated_Infections-Hospital.csv',           '2021/hospitals_07_2021/Healthcare_Associated_Infections-Hospital.csv',           '2021/hospitals_10_2021/Healthcare_Associated_Infections-Hospital.csv',                      '2020/hospitals_archive_10_2020/Healthcare_Associated_Infections_Hospital.csv',           '2020/hospitals_archive_07_2020/Healthcare_Associated_Infections_Hospital.csv',           '2020/HOSArchive_Revised_Flatfiles_20200422/Healthcare Associated Infections - Hospital.csv',           '2020/HOSArchive_Revised_Flatfiles_20200129/Healthcare Associated Infections - Hospital.csv',                      '2019/HOSArchive_Revised_Flatfiles_20191030/Healthcare Associated Infections - Hospital.csv',           '2019/HOSArchive_Revised_Flatfiles_20190702/Healthcare Associated Infections - Hospital.csv',           '2019/HOSArchive_Revised_FlatFiles_20190424/Healthcare Associated Infections - Hospital.csv',           '2019/HOSArchive_Revised_Flatfiles_20190321/Healthcare Associated Infections - Hospital.csv',                      '2018/HOSArchive_Revised_FlatFiles_20181031/Healthcare Associated Infections - Hospital.csv',           '2018/HOSArchive_Revised_FlatFiles_20180725/Healthcare Associated Infections - Hospital.csv',           '2018/HOSArchive_Revised_FlatFiles_20180523/Healthcare Associated Infections - Hospital.csv',           '2018/HOSArchive_Revised_FlatFiles_20180126/Healthcare Associated Infections - Hospital.csv',                      '2017/HOSArchive_Revised_FlatFiles_20171024/Healthcare Associated Infections - Hospital.csv',           '2017/HOSArchive_Revised_FlatFiles_20170726/Healthcare Associated Infections - Hospital.csv',           '2017/HOSArchive_Revised_Flatfiles_20170428/Healthcare Associated Infections - Hospital.csv',                      '2016/HOSArchive_Revised_Flatfiles_20161219/Healthcare Associated Infections - Hospital.csv',           '2016/Hospital_Revised_FlatFiles_20161110/Healthcare Associated Infections - Hospital.csv',           '2016/HOSArchive_Revised_FlatFiles_20160810/Healthcare Associated Infections - Hospital.csv',           '2016/HOSArchive_Revised_FlatFiles_20160504/Healthcare Associated Infections - Hospital.csv',                      '2015/HOSArchive_Revised_FlatFiles_20151210/Healthcare Associated Infections - Hospital.csv',           '2015/HOSArchive_Revised_FlatFiles_20151008/Healthcare Associated Infections - Hospital.csv',           '2015/HOSArchive_Revised_FlatFiles_20150716/Healthcare Associated Infections - Hospital.csv',           '2015/HOSArchive_Revised_Flatfiles_20150506/Healthcare Associated Infections - Hospital.csv',           '2015/HOSArchive_Revised_Flatfiles_20150416/Healthcare Associated Infections - Hospital.csv',           '2015/HOSArchive_Revised_Flatfiles_20150122/Healthcare Associated Infections - Hospital.csv',                      '2014/HOSArchive_Revised_Flatfiles_20141218/Healthcare Associated Infections - Hospital.csv',           '2014/HOSArchive_Revised_Flatfiles_20141023/Healthcare Associated Infections - Hospital.csv',           '2014/HOSArchive_Revised_Flatfiles_20140717/Healthcare Associated Infections - Hospital.csv',                      '2013/HOSArchive_Revised_Flatfiles_20131001/Healthcare_Associated_Infections.csv',           '2013/HOSArchive_Revised_Flatfiles_20130701/Healthcare_Associated_Infections.csv',           '2013/HOSArchive_Revised_Flatfiles_20130401/Healthcare_Associated_Infections.csv',                      ]for i, subdir in enumerate(subdirs):    with io.capture_output() as captured: df = pd.read_csv(main_dir + subdir, encoding = "ISO-8859-1")    print(subdir + ' :  (rows, columns) =', df.shape)        if yrs[i] == '2013':        df.drop(labels=['Address 2', 'Address 3'], axis=1, inplace=True)        df.rename(columns={'Address 1': 'Address',                           'Measure': 'Measure Name'}, inplace=True)                df["Measure ID"] = ['Not given']*df.shape[0]        df['Compared to National'] = ['Not given']*df.shape[0]                if mos[i] == '04':                        '''            Central Line Associated Bloodstream Infection		07/01/2011		06/30/2012            Catheter Associated Urinary Tract Infections		    01/01/2012		06/30/2012            SSI - Colon Surgery		                            01/01/2012		06/30/2012            SSI - Abdominal Hysterectomy		                    01/01/2012	    06/30/2012            '''                        ls = ['Central-Line-Associated Blood Stream Infections (CLABSI)',                  'CLABSI Compared to National',                  'CLABSI Lower Confidence Limit',                  'CLABSI Observed Cases',                  'CLABSI Predicted Cases',                  'CLABSI Upper Confidence Limit',                  'CLABSI Central Line Days',                  ]            clabsi_df = df[df['Measure Name'].isin(ls)]            clabsi_df["Start Date"] = ['07/01/2011']*clabsi_df.shape[0]            clabsi_df["End Date"] = ['06/30/2012']*clabsi_df.shape[0]                        ls = ['Catheter-Associated Urinary Tract Infections (CAUTI)',                  'CAUTI Compared to National',                  'CAUTI Lower Confidence Limit',                  'CAUTI Observed Cases',                  'CAUTI Predicted Cases',                  'CAUTI Upper Confidence Limit',                  'CAUTI Urinary Catheter Days',                  ]            cauti_df = df[df['Measure Name'].isin(ls)]            cauti_df["Start Date"] = ['01/01/2012']*cauti_df.shape[0]            cauti_df["End Date"] = ['06/30/2012']*cauti_df.shape[0]                        ls = ['Surgical Site Infection from colon surgery (SSI: Colon)',                  'SSI: Colon Compared to National',                  'SSI: Colon Lower Confidence Limit',                  'SSI: Colon Observed Cases',                  'SSI: Colon Predicted Cases',                  'SSI: Colon Upper Confidence Limit',                  'SSI: Colon, Number of Procedures',                ]            ssi_df1 = df[df['Measure Name'].isin(ls)]            ssi_df1["Start Date"] = ['01/01/2011']*ssi_df1.shape[0]            ssi_df1["End Date"] = ['06/30/2012']*ssi_df1.shape[0]                        ls = ['Surgical Site Infection from abdominal hysterectomy (SSI: Hysterectomy)',                  'SSI: Abdominal Lower Confidence Limit',                  'SSI: Abdominal Observed Cases',                  'SSI: Abdominal Predicted Cases',                  'SSI: Abdominal Upper Confidence Limit',                  'SSI: Abdominal, Number of Procedures',                  'SSI: Hysterectomy Compared to National',                ]            ssi_df2 = df[df['Measure Name'].isin(ls)]            ssi_df2["Start Date"] = ['01/01/2011']*ssi_df2.shape[0]            ssi_df2["End Date"] = ['06/30/2012']*ssi_df2.shape[0]                        df = pd.concat([clabsi_df, cauti_df, ssi_df1, ssi_df2])                                elif mos[i] == '07':                        '''            Central Line Associated Bloodstream Infection		10/01/2011		09/30/2012            Catheter Associated Urinary Tract Infections		    01/01/2012		09/30/2012            SSI - Colon Surgery		                            01/01/2012		09/30/2012            SSI - Abdominal Hysterectomy		                    01/01/2012	    09/30/2012            '''                        #df["Measure Start Date"] = []*df.shape[0]            #df["Measure End Date"] = []*df.shape[0]                        ls = ['Central-Line-Associated Blood Stream Infections (CLABSI)',                  'CLABSI Compared to National',                  'CLABSI Lower Confidence Limit',                  'CLABSI Observed Cases',                  'CLABSI Predicted Cases',                  'CLABSI Upper Confidence Limit',                  'CLABSI Central Line Days',                  ]            clabsi_df = df[df['Measure Name'].isin(ls)]            clabsi_df["Start Date"] = ['10/01/2011']*clabsi_df.shape[0]            clabsi_df["End Date"] = ['09/30/2012']*clabsi_df.shape[0]                        ls = ['Catheter-Associated Urinary Tract Infections (CAUTI)',                  'CAUTI Compared to National',                  'CAUTI Lower Confidence Limit',                  'CAUTI Observed Cases',                  'CAUTI Predicted Cases',                  'CAUTI Upper Confidence Limit',                  'CAUTI Urinary Catheter Days',                  ]            cauti_df = df[df['Measure Name'].isin(ls)]            cauti_df["Start Date"] = ['01/01/2012']*cauti_df.shape[0]            cauti_df["End Date"] = ['09/30/2012']*cauti_df.shape[0]                        ls = ['Surgical Site Infection from colon surgery (SSI: Colon)',                  'SSI: Colon Compared to National',                  'SSI: Colon Lower Confidence Limit',                  'SSI: Colon Observed Cases',                  'SSI: Colon Predicted Cases',                  'SSI: Colon Upper Confidence Limit',                  'SSI: Colon, Number of Procedures',                ]            ssi_df1 = df[df['Measure Name'].isin(ls)]            ssi_df1["Start Date"] = ['01/01/2012']*ssi_df1.shape[0]            ssi_df1["End Date"] = ['09/30/2012']*ssi_df1.shape[0]                        ls = ['Surgical Site Infection from abdominal hysterectomy (SSI: Hysterectomy)',                  'SSI: Abdominal Lower Confidence Limit',                  'SSI: Abdominal Observed Cases',                  'SSI: Abdominal Predicted Cases',                  'SSI: Abdominal Upper Confidence Limit',                  'SSI: Abdominal, Number of Procedures',                  'SSI: Hysterectomy Compared to National',                ]            ssi_df2 = df[df['Measure Name'].isin(ls)]            ssi_df2["Start Date"] = ['01/01/2012']*ssi_df2.shape[0]            ssi_df2["End Date"] = ['09/30/2012']*ssi_df2.shape[0]                        df = pd.concat([clabsi_df, cauti_df, ssi_df1, ssi_df2])                                if mos[i] == '10':                        '''            Central Line Associated Bloodstream Infection		01/01/2012		12/31/2012            Catheter Associated Urinary Tract Infections		    01/01/2012		12/31/2012            SSI - Colon Surgery		                            01/01/2012		12/31/2012            SSI - Abdominal Hysterectomy		                    01/01/2012	    12/31/2012            '''            ls = ['Central-Line-Associated Blood Stream Infections (CLABSI)',                  'CLABSI Compared to National',                  'CLABSI Lower Confidence Limit',                  'CLABSI Observed Cases',                  'CLABSI Predicted Cases',                  'CLABSI Upper Confidence Limit',                  'CLABSI Central Line Days',                  ]            clabsi_df = df[df['Measure Name'].isin(ls)]            clabsi_df["Start Date"] = ['01/01/2012']*clabsi_df.shape[0]            clabsi_df["End Date"] = ['12/31/2012']*clabsi_df.shape[0]                        ls = ['Catheter-Associated Urinary Tract Infections (CAUTI)',                  'CAUTI Compared to National',                  'CAUTI Lower Confidence Limit',                  'CAUTI Observed Cases',                  'CAUTI Predicted Cases',                  'CAUTI Upper Confidence Limit',                  'CAUTI Urinary Catheter Days',                  ]            cauti_df = df[df['Measure Name'].isin(ls)]            cauti_df["Start Date"] = ['01/01/2012']*cauti_df.shape[0]            cauti_df["End Date"] = ['12/31/2012']*cauti_df.shape[0]                        ls = ['Surgical Site Infection from colon surgery (SSI: Colon)',                  'SSI: Colon Compared to National',                  'SSI: Colon Lower Confidence Limit',                  'SSI: Colon Observed Cases',                  'SSI: Colon Predicted Cases',                  'SSI: Colon Upper Confidence Limit',                  'SSI: Colon, Number of Procedures',                ]            ssi_df1 = df[df['Measure Name'].isin(ls)]            ssi_df1["Start Date"] = ['01/01/2012']*ssi_df1.shape[0]            ssi_df1["End Date"] = ['12/31/2012']*ssi_df1.shape[0]                        ls = ['Surgical Site Infection from abdominal hysterectomy (SSI: Hysterectomy)',                  'SSI: Abdominal Lower Confidence Limit',                  'SSI: Abdominal Observed Cases',                  'SSI: Abdominal Predicted Cases',                  'SSI: Abdominal Upper Confidence Limit',                  'SSI: Abdominal, Number of Procedures',                  'SSI: Hysterectomy Compared to National',                ]            ssi_df2 = df[df['Measure Name'].isin(ls)]            ssi_df2["Start Date"] = ['01/01/2012']*ssi_df2.shape[0]            ssi_df2["End Date"] = ['12/31/2012']*ssi_df2.shape[0]                        df = pd.concat([clabsi_df, cauti_df, ssi_df1, ssi_df2])                                        df, lists = process2(df, lists, yrs[i], mos[i])    df_list.append(df)check_lists(lists)df = pd.concat(df_list)print('df.shape:', df.shape)print(sorted(list(df)))df.to_pickle(main_dir +  "CombinedFiles_HAI/Facility.pkl")