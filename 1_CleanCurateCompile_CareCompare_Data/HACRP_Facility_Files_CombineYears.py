import pandas as pdimport warningsfrom IPython.utils import ioimport sysimport numpy as npwarnings.filterwarnings('ignore')pd.set_option('display.max_columns', None)pd.set_option('display.max_rows', None)main_dir = '/Users/kenlocey/GitHub/HACRP-HAIs/data/CareCompare_data/'###################################################################################################### CUSTOM FUNCTIONS #####################################################################################################################def check_lists(lists):    for i, ls in enumerate(lists):        for i2, ls2 in enumerate(lists):            for i3 in ls:                if i3 not in ls2:                    print('\n')                    print(i3 + ': NOT FOUND IN')                    print(ls2)                    sys.exit()def curate(df):    try:        df = df[df['Facility ID'] != np.nan]        df['Facility ID'] = df['Facility ID'].values.astype(str)                ids = df['Facility ID'].tolist()        ids2 = []        for i in ids:            if len(i) < 6:                i = '0' + i            ids2.append(i)        df['Facility ID'] = ids2            except:        pass    try:        df = df[df['Facility Name'] != np.nan]    except:        pass        for c in list(df):            try:            df[c] = df[c].str.replace("\t","")        except:            pass    return dfdef rename_and_fill(df):        cols1 = ['Provider ID', 'Hospital Name', 'PSI 90 Start Date', 'PSI 90 End Date',              'PSI 90 W Z Score', 'PSI 90 Footnote',             'FISCAL_YEAR', 'DOMAIN_1_SCORE', 'DOMAIN_1_FOOTNOTE', 'DOMAIN_1_START_DATE',              'DOMAIN_1_END_DATE', 'PSI_90_W_Z_Score', 'PSI_90_FOOTNOTE', 'DOMAIN_2_SCORE',              'DOMAIN_2_FOOTNOTE', 'CLABSI_W_Z_SCORE', 'CLABSI_FOOTNOTE', 'CAUTI_W_Z_SCORE',              'CAUTI_FOOTNOTE', 'SSI_W_Z_SCORE', 'SSI_FOOTNOTE', 'MRSA_W_Z_SCORE', 'MRSA_FOOTNOTE',              'CDI_W_Z_SCORE', 'CDI_FOOTNOTE', 'DOMAIN_2_START_DATE', 'DOMAIN_2_END_DATE',              'TOTAL_HAC_SCORE', 'TOTAL_HAC_FOOTNOTE', 'PAYMENT_REDUCTION', 'PAYMENT_REDUCTION_FOOTNOTE',             'HOSPITAL_NAME', 'PROVIDER_ID', 'STATE', 'Hospital_Name', 'Provider_ID',             'Domain_1_Score', 'Domain_1_Score_Footnote', 'Domain_1_Start_Date',              'Domain_1_End_Date', 'AHRQ_PSI_90_Score', 'AHRQ_PSI_90_Score_Footnote',              'Domain_2_Score', 'Domain_2_Score_Footnote', 'CLABSI_Score', 'CLABSI_Score_Footnote',              'CAUTI_Score', 'CAUTI_Score_Footnote', 'SSI_Score', 'SSI_Score_Footnote', 'MRSA_Score',              'MRSA_Footnote', 'CDI_Score', 'CDI_Footnote', 'Domain_2_Start_Date', 'Domain_2_End_Date',              'Total_HAC_Score', 'Total_HAC_Score_Footnote', 'Payment_Reduction',              'Payment_Reduction_Footnote', 'CLABSI Footnote', 'CAUTI Footnote',             'PROVIDER ID', 'PSI_90_W_Z_SCORE', 'Fiscal_Year',             ]            cols2 = ['Facility ID', 'Facility Name', 'PSI-90 Start Date', 'PSI-90 End Date',             'PSI-90 W Z Score', 'PSI-90 Footnote',             'Fiscal Year', 'Domain 1 Score', 'Domain 1 Footnote', 'Domain 1 Start Date',             'Domain 1 End Date', 'PSI-90 W Z Score', 'PSI-90 Footnote', 'Domain 2 Score',              'Domain 2 Footnote', 'CLABSI W Z Score', 'CLABSI Footnote', 'CAUTI W Z Score',             'CAUTI Footnote', 'SSI W Z Score', 'SSI Footnote', 'MRSA W Z Score',              'MRSA Footnote', 'CDI W Z Score', 'CDI Footnote', 'Domain 2 Start Date',             'Domain 2 End Date', 'Total HAC Score', 'Total HAC Footnote',              'Payment Reduction', 'Payment Reduction Footnote',             'Facility Name', 'Facility ID', 'State', 'Facility Name', 'Facility ID',             'Domain 1 Score', 'Domain 1 Score Footnote', 'Domain 1 Start Date',              'Domain 1 End Date', 'AHRQ PSI-90 Score', 'AHRQ PSI-90 Footnote',             'Domain 2 Score', 'Domain 2 Score Footnote', 'CLABSI Score',              'CLABSI Footnote', 'CAUTI Score', 'CAUTI Footnote',              'SSI Score', 'SSI Footnote', 'MRSA Score', 'MRSA Footnote',              'CDI Score', 'CDI Footnote', 'Domain 2 Start Date', 'Domain 2 End Date',              'Total HAC Score', 'Total HAC Footnote', 'Payment Reduction',             'Payment Reduction Footnote', 'CLABSI Footnote', 'CAUTI Footnote',             'Facility ID', 'PSI-90 W Z Score', 'Fiscal Year',             ]        for i, col in enumerate(cols1):        if col in list(df):            df.rename(columns={col: cols2[i]}, inplace=True)                            cols = ['PSI-90 Start Date', 'PSI-90 End Date', 'PSI-90 W Z Score', 'PSI-90 Footnote',            'HAI Measures Start Date', 'HAI Measures End Date', 'Fiscal Year',             'Domain 1 Score', 'Domain 1 Footnote', 'Domain 1 Start Date', 'Domain 1 End Date',            'Domain 2 Score', 'Domain 2 Footnote', 'Domain 2 Start Date', 'Domain 2 End Date',            'CLABSI W Z Score', 'CAUTI W Z Score', 'SSI W Z Score', 'MRSA W Z Score',             'CDI W Z Score', 'MRSA Footnote', 'CDI Footnote', 'Payment Reduction',            'Payment Reduction Footnote', 'CLABSI Footnote', 'CAUTI Footnote',            'SSI Footnote', 'Total HAC Footnote', 'MRSA Score', 'CDI Score',            'Domain 1 Score Footnote', 'AHRQ PSI-90 Footnote', 'Domain 2 Score Footnote',            'SSI Score', 'AHRQ PSI-90 Score', 'CLABSI Score', 'CAUTI Score',            'Footnotes',            ]        for col in cols:        if col not in list(df):            df[col] = float('NaN')        l = list(df)    l = list(set([x for x in l if l.count(x) > 1]))    if len(l) > 0:        print('duplicates:', l)        sys.exit()            return dfdef process2(df, lists, yr, mo):    df = rename_and_fill(df)    df = curate(df)    lists.append(list(df))    df['file_month'] = [mo]* df.shape[0]    df['file_year'] = [yr]* df.shape[0]    df = df.reindex(sorted(df.columns), axis=1)    return df, lists##################################################################################################################  COMPLICATIONS & DEATHS FILES  #########################################################################################################################df_list = []lists = []yrs = ['2022', '2022',        '2021','2021','2021', '2021', '2021',       '2020', '2020', '2020', '2020',        '2019', '2019', '2019', '2019',        '2018', '2018', '2018', '2018',       '2017', '2017', '2017',       '2016', '2016', '2016', '2016',       '2015', '2015', '2015', '2015', '2015', '2015',       '2014',       ]mos = ['01', '04',        '01', '03', '04', '07', '10',        '10', '07', '04', '01',        '10', '07', '04', '03',        '10', '07', '05', '01',       '10', '07', '04',       '12', '11', '08', '05',       '12', '10', '07', '05', '04', '01',       '12',       ]subdirs = ['2022/hospitals_01_2022/FY_2022_HAC_Reduction_Program_Hospital.csv',            '2022/hospitals_04_2022/FY_2022_HAC_Reduction_Program_Hospital.csv',                      '2021/hospitals_01_2021/FY_2021_HAC_Reduction_Program_Hospital.csv',           '2021/hospitals_03_2021/FY_2021_HAC_Reduction_Program_Hospital.csv',           '2021/hospitals_04_2021/FY_2021_HAC_Reduction_Program_Hospital.csv',           '2021/hospitals_07_2021/FY_2021_HAC_Reduction_Program_Hospital.csv',           '2021/hospitals_10_2021/FY_2021_HAC_Reduction_Program_Hospital.csv',                      '2020/hospitals_archive_10_2020/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2020/hospitals_archive_07_2020/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2020/HOSArchive_Revised_Flatfiles_20200422/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2020/HOSArchive_Revised_Flatfiles_20200129/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',                      '2019/HOSArchive_Revised_Flatfiles_20191030/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2019/HOSArchive_Revised_Flatfiles_20190702/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2019/HOSArchive_Revised_FlatFiles_20190424/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2019/HOSArchive_Revised_Flatfiles_20190321/HOSPITAL_QUARTERY_HAC_DOMAIN_HOSPITAL.csv',                      '2018/HOSArchive_Revised_FlatFiles_20181031/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2018/HOSArchive_Revised_FlatFiles_20180725/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',            '2018/HOSArchive_Revised_FlatFiles_20180523/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2018/HOSArchive_Revised_FlatFiles_20180126/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',                      '2017/HOSArchive_Revised_FlatFiles_20171024/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2017/HOSArchive_Revised_FlatFiles_20170726/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',            '2017/HOSArchive_Revised_Flatfiles_20170428/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',                       '2016/HOSArchive_Revised_Flatfiles_20161219/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2016/Hospital_Revised_FlatFiles_20161110/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL_02_26_2016.csv',            '2016/HOSArchive_Revised_FlatFiles_20160810/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL_02_26_2016.csv',           '2016/HOSArchive_Revised_FlatFiles_20160504/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL_02_26_2016.csv',                      '2015/HOSArchive_Revised_FlatFiles_20151210/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2015/HOSArchive_Revised_FlatFiles_20151008/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2015/HOSArchive_Revised_FlatFiles_20150716/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2015/HOSArchive_Revised_Flatfiles_20150506/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2015/HOSArchive_Revised_Flatfiles_20150416/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL.csv',           '2015/HOSArchive_Revised_Flatfiles_20150122/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL_11_24_2014.csv',                      '2014/HOSArchive_Revised_Flatfiles_20141218/HOSPITAL_QUARTERLY_HAC_DOMAIN_HOSPITAL_11_24_2014.csv',           ]for i, subdir in enumerate(subdirs):    with io.capture_output() as captured: df = pd.read_csv(main_dir + subdir, encoding = "ISO-8859-1")    print(subdir + ' :  (rows, columns) =', df.shape)    df, lists = process2(df, lists, yrs[i], mos[i])    df_list.append(df)check_lists(lists)df = pd.concat(df_list)print('df.shape:', df.shape)print(sorted(list(df)))df.to_pickle(main_dir +  "CombinedFiles_HACRP/Facility.pkl")